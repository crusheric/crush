"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createVersion", {
    enumerable: true,
    get: function() {
        return createVersion;
    }
});
const _withSession = require("./withSession");
const createVersion = async function createVersion({ autosave, collectionSlug, createdAt, parent, req = {}, updatedAt, versionData }) {
    const VersionModel = this.versions[collectionSlug];
    const options = (0, _withSession.withSession)(this, req.transactionID);
    const [doc] = await VersionModel.create([
        {
            autosave,
            createdAt,
            latest: true,
            parent,
            updatedAt,
            version: versionData
        }
    ], options, req);
    await VersionModel.updateMany({
        $and: [
            {
                _id: {
                    $ne: doc._id
                }
            },
            {
                parent: {
                    $eq: parent
                }
            },
            {
                latest: {
                    $eq: true
                }
            }
        ]
    }, {
        $unset: {
            latest: 1
        }
    }, options);
    const result = JSON.parse(JSON.stringify(doc));
    const verificationToken = doc._verificationToken;
    // custom id type reset
    result.id = result._id;
    if (verificationToken) {
        result._verificationToken = verificationToken;
    }
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVWZXJzaW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ3JlYXRlVmVyc2lvbiB9IGZyb20gJ3BheWxvYWQvZGF0YWJhc2UnXG5pbXBvcnQgdHlwZSB7IFBheWxvYWRSZXF1ZXN0IH0gZnJvbSAncGF5bG9hZC90eXBlcydcbmltcG9ydCB0eXBlIHsgRG9jdW1lbnQgfSBmcm9tICdwYXlsb2FkL3R5cGVzJ1xuXG5pbXBvcnQgdHlwZSB7IE1vbmdvb3NlQWRhcHRlciB9IGZyb20gJy4nXG5cbmltcG9ydCB7IHdpdGhTZXNzaW9uIH0gZnJvbSAnLi93aXRoU2Vzc2lvbidcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVZlcnNpb246IENyZWF0ZVZlcnNpb24gPSBhc3luYyBmdW5jdGlvbiBjcmVhdGVWZXJzaW9uKFxuICB0aGlzOiBNb25nb29zZUFkYXB0ZXIsXG4gIHtcbiAgICBhdXRvc2F2ZSxcbiAgICBjb2xsZWN0aW9uU2x1ZyxcbiAgICBjcmVhdGVkQXQsXG4gICAgcGFyZW50LFxuICAgIHJlcSA9IHt9IGFzIFBheWxvYWRSZXF1ZXN0LFxuICAgIHVwZGF0ZWRBdCxcbiAgICB2ZXJzaW9uRGF0YSxcbiAgfSxcbikge1xuICBjb25zdCBWZXJzaW9uTW9kZWwgPSB0aGlzLnZlcnNpb25zW2NvbGxlY3Rpb25TbHVnXVxuICBjb25zdCBvcHRpb25zID0gd2l0aFNlc3Npb24odGhpcywgcmVxLnRyYW5zYWN0aW9uSUQpXG5cbiAgY29uc3QgW2RvY10gPSBhd2FpdCBWZXJzaW9uTW9kZWwuY3JlYXRlKFxuICAgIFtcbiAgICAgIHtcbiAgICAgICAgYXV0b3NhdmUsXG4gICAgICAgIGNyZWF0ZWRBdCxcbiAgICAgICAgbGF0ZXN0OiB0cnVlLFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIHVwZGF0ZWRBdCxcbiAgICAgICAgdmVyc2lvbjogdmVyc2lvbkRhdGEsXG4gICAgICB9LFxuICAgIF0sXG4gICAgb3B0aW9ucyxcbiAgICByZXEsXG4gIClcblxuICBhd2FpdCBWZXJzaW9uTW9kZWwudXBkYXRlTWFueShcbiAgICB7XG4gICAgICAkYW5kOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBfaWQ6IHtcbiAgICAgICAgICAgICRuZTogZG9jLl9pZCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGFyZW50OiB7XG4gICAgICAgICAgICAkZXE6IHBhcmVudCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbGF0ZXN0OiB7XG4gICAgICAgICAgICAkZXE6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7ICR1bnNldDogeyBsYXRlc3Q6IDEgfSB9LFxuICAgIG9wdGlvbnMsXG4gIClcblxuICBjb25zdCByZXN1bHQ6IERvY3VtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkb2MpKVxuICBjb25zdCB2ZXJpZmljYXRpb25Ub2tlbiA9IGRvYy5fdmVyaWZpY2F0aW9uVG9rZW5cblxuICAvLyBjdXN0b20gaWQgdHlwZSByZXNldFxuICByZXN1bHQuaWQgPSByZXN1bHQuX2lkXG4gIGlmICh2ZXJpZmljYXRpb25Ub2tlbikge1xuICAgIHJlc3VsdC5fdmVyaWZpY2F0aW9uVG9rZW4gPSB2ZXJpZmljYXRpb25Ub2tlblxuICB9XG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVWZXJzaW9uIiwiYXV0b3NhdmUiLCJjb2xsZWN0aW9uU2x1ZyIsImNyZWF0ZWRBdCIsInBhcmVudCIsInJlcSIsInVwZGF0ZWRBdCIsInZlcnNpb25EYXRhIiwiVmVyc2lvbk1vZGVsIiwidmVyc2lvbnMiLCJvcHRpb25zIiwid2l0aFNlc3Npb24iLCJ0cmFuc2FjdGlvbklEIiwiZG9jIiwiY3JlYXRlIiwibGF0ZXN0IiwidmVyc2lvbiIsInVwZGF0ZU1hbnkiLCIkYW5kIiwiX2lkIiwiJG5lIiwiJGVxIiwiJHVuc2V0IiwicmVzdWx0IiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwidmVyaWZpY2F0aW9uVG9rZW4iLCJfdmVyaWZpY2F0aW9uVG9rZW4iLCJpZCJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFRYUE7OztlQUFBQTs7OzZCQUZlO0FBRXJCLE1BQU1BLGdCQUErQixlQUFlQSxjQUV6RCxFQUNFQyxRQUFRLEVBQ1JDLGNBQWMsRUFDZEMsU0FBUyxFQUNUQyxNQUFNLEVBQ05DLE1BQU0sQ0FBQyxDQUFtQixFQUMxQkMsU0FBUyxFQUNUQyxXQUFXLEVBQ1o7SUFFRCxNQUFNQyxlQUFlLElBQUksQ0FBQ0MsUUFBUSxDQUFDUCxlQUFlO0lBQ2xELE1BQU1RLFVBQVVDLElBQUFBLHdCQUFXLEVBQUMsSUFBSSxFQUFFTixJQUFJTyxhQUFhO0lBRW5ELE1BQU0sQ0FBQ0MsSUFBSSxHQUFHLE1BQU1MLGFBQWFNLE1BQU0sQ0FDckM7UUFDRTtZQUNFYjtZQUNBRTtZQUNBWSxRQUFRO1lBQ1JYO1lBQ0FFO1lBQ0FVLFNBQVNUO1FBQ1g7S0FDRCxFQUNERyxTQUNBTDtJQUdGLE1BQU1HLGFBQWFTLFVBQVUsQ0FDM0I7UUFDRUMsTUFBTTtZQUNKO2dCQUNFQyxLQUFLO29CQUNIQyxLQUFLUCxJQUFJTSxHQUFHO2dCQUNkO1lBQ0Y7WUFDQTtnQkFDRWYsUUFBUTtvQkFDTmlCLEtBQUtqQjtnQkFDUDtZQUNGO1lBQ0E7Z0JBQ0VXLFFBQVE7b0JBQ05NLEtBQUs7Z0JBQ1A7WUFDRjtTQUNEO0lBQ0gsR0FDQTtRQUFFQyxRQUFRO1lBQUVQLFFBQVE7UUFBRTtJQUFFLEdBQ3hCTDtJQUdGLE1BQU1hLFNBQW1CQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLFNBQVMsQ0FBQ2I7SUFDbkQsTUFBTWMsb0JBQW9CZCxJQUFJZSxrQkFBa0I7SUFFaEQsdUJBQXVCO0lBQ3ZCTCxPQUFPTSxFQUFFLEdBQUdOLE9BQU9KLEdBQUc7SUFDdEIsSUFBSVEsbUJBQW1CO1FBQ3JCSixPQUFPSyxrQkFBa0IsR0FBR0Q7SUFDOUI7SUFDQSxPQUFPSjtBQUNUIn0=