"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "updateOne", {
    enumerable: true,
    get: function() {
        return updateOne;
    }
});
const _handleError = /*#__PURE__*/ _interop_require_default(require("./utilities/handleError"));
const _sanitizeInternalFields = /*#__PURE__*/ _interop_require_default(require("./utilities/sanitizeInternalFields"));
const _withSession = require("./withSession");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const updateOne = async function updateOne({ id, collection, data, locale, req = {}, where: whereArg }) {
    const where = id ? {
        id: {
            equals: id
        }
    } : whereArg;
    const Model = this.collections[collection];
    const options = {
        ...(0, _withSession.withSession)(this, req.transactionID),
        lean: true,
        new: true
    };
    const query = await Model.buildQuery({
        locale,
        payload: this.payload,
        where
    });
    let result;
    try {
        result = await Model.findOneAndUpdate(query, data, options);
    } catch (error) {
        (0, _handleError.default)(error, req);
    }
    result = JSON.parse(JSON.stringify(result));
    result.id = result._id;
    result = (0, _sanitizeInternalFields.default)(result);
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91cGRhdGVPbmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBVcGRhdGVPbmUgfSBmcm9tICdwYXlsb2FkL2RhdGFiYXNlJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkUmVxdWVzdCB9IGZyb20gJ3BheWxvYWQvdHlwZXMnXG5cbmltcG9ydCB0eXBlIHsgTW9uZ29vc2VBZGFwdGVyIH0gZnJvbSAnLidcblxuaW1wb3J0IGhhbmRsZUVycm9yIGZyb20gJy4vdXRpbGl0aWVzL2hhbmRsZUVycm9yJ1xuaW1wb3J0IHNhbml0aXplSW50ZXJuYWxGaWVsZHMgZnJvbSAnLi91dGlsaXRpZXMvc2FuaXRpemVJbnRlcm5hbEZpZWxkcydcbmltcG9ydCB7IHdpdGhTZXNzaW9uIH0gZnJvbSAnLi93aXRoU2Vzc2lvbidcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZU9uZTogVXBkYXRlT25lID0gYXN5bmMgZnVuY3Rpb24gdXBkYXRlT25lKFxuICB0aGlzOiBNb25nb29zZUFkYXB0ZXIsXG4gIHsgaWQsIGNvbGxlY3Rpb24sIGRhdGEsIGxvY2FsZSwgcmVxID0ge30gYXMgUGF5bG9hZFJlcXVlc3QsIHdoZXJlOiB3aGVyZUFyZyB9LFxuKSB7XG4gIGNvbnN0IHdoZXJlID0gaWQgPyB7IGlkOiB7IGVxdWFsczogaWQgfSB9IDogd2hlcmVBcmdcbiAgY29uc3QgTW9kZWwgPSB0aGlzLmNvbGxlY3Rpb25zW2NvbGxlY3Rpb25dXG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgLi4ud2l0aFNlc3Npb24odGhpcywgcmVxLnRyYW5zYWN0aW9uSUQpLFxuICAgIGxlYW46IHRydWUsXG4gICAgbmV3OiB0cnVlLFxuICB9XG5cbiAgY29uc3QgcXVlcnkgPSBhd2FpdCBNb2RlbC5idWlsZFF1ZXJ5KHtcbiAgICBsb2NhbGUsXG4gICAgcGF5bG9hZDogdGhpcy5wYXlsb2FkLFxuICAgIHdoZXJlLFxuICB9KVxuXG4gIGxldCByZXN1bHRcbiAgdHJ5IHtcbiAgICByZXN1bHQgPSBhd2FpdCBNb2RlbC5maW5kT25lQW5kVXBkYXRlKHF1ZXJ5LCBkYXRhLCBvcHRpb25zKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGhhbmRsZUVycm9yKGVycm9yLCByZXEpXG4gIH1cblxuICByZXN1bHQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpXG4gIHJlc3VsdC5pZCA9IHJlc3VsdC5faWRcbiAgcmVzdWx0ID0gc2FuaXRpemVJbnRlcm5hbEZpZWxkcyhyZXN1bHQpXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbInVwZGF0ZU9uZSIsImlkIiwiY29sbGVjdGlvbiIsImRhdGEiLCJsb2NhbGUiLCJyZXEiLCJ3aGVyZSIsIndoZXJlQXJnIiwiZXF1YWxzIiwiTW9kZWwiLCJjb2xsZWN0aW9ucyIsIm9wdGlvbnMiLCJ3aXRoU2Vzc2lvbiIsInRyYW5zYWN0aW9uSUQiLCJsZWFuIiwibmV3IiwicXVlcnkiLCJidWlsZFF1ZXJ5IiwicGF5bG9hZCIsInJlc3VsdCIsImZpbmRPbmVBbmRVcGRhdGUiLCJlcnJvciIsImhhbmRsZUVycm9yIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiX2lkIiwic2FuaXRpemVJbnRlcm5hbEZpZWxkcyJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFTYUE7OztlQUFBQTs7O29FQUpXOytFQUNXOzZCQUNQOzs7Ozs7QUFFckIsTUFBTUEsWUFBdUIsZUFBZUEsVUFFakQsRUFBRUMsRUFBRSxFQUFFQyxVQUFVLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxNQUFNLENBQUMsQ0FBbUIsRUFBRUMsT0FBT0MsUUFBUSxFQUFFO0lBRTdFLE1BQU1ELFFBQVFMLEtBQUs7UUFBRUEsSUFBSTtZQUFFTyxRQUFRUDtRQUFHO0lBQUUsSUFBSU07SUFDNUMsTUFBTUUsUUFBUSxJQUFJLENBQUNDLFdBQVcsQ0FBQ1IsV0FBVztJQUMxQyxNQUFNUyxVQUFVO1FBQ2QsR0FBR0MsSUFBQUEsd0JBQVcsRUFBQyxJQUFJLEVBQUVQLElBQUlRLGFBQWEsQ0FBQztRQUN2Q0MsTUFBTTtRQUNOQyxLQUFLO0lBQ1A7SUFFQSxNQUFNQyxRQUFRLE1BQU1QLE1BQU1RLFVBQVUsQ0FBQztRQUNuQ2I7UUFDQWMsU0FBUyxJQUFJLENBQUNBLE9BQU87UUFDckJaO0lBQ0Y7SUFFQSxJQUFJYTtJQUNKLElBQUk7UUFDRkEsU0FBUyxNQUFNVixNQUFNVyxnQkFBZ0IsQ0FBQ0osT0FBT2IsTUFBTVE7SUFDckQsRUFBRSxPQUFPVSxPQUFPO1FBQ2RDLElBQUFBLG9CQUFXLEVBQUNELE9BQU9oQjtJQUNyQjtJQUVBYyxTQUFTSSxLQUFLQyxLQUFLLENBQUNELEtBQUtFLFNBQVMsQ0FBQ047SUFDbkNBLE9BQU9sQixFQUFFLEdBQUdrQixPQUFPTyxHQUFHO0lBQ3RCUCxTQUFTUSxJQUFBQSwrQkFBc0IsRUFBQ1I7SUFFaEMsT0FBT0E7QUFDVCJ9