'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DynamicFieldSelector", {
    enumerable: true,
    get: function() {
        return DynamicFieldSelector;
    }
});
const _forms = require("payload/components/forms");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const DynamicFieldSelector = (props)=>{
    const { fields, getDataByPath } = (0, _forms.useForm)();
    const [options, setOptions] = (0, _react.useState)([]);
    (0, _react.useEffect)(()=>{
        // @ts-ignore
        const fields = getDataByPath('fields');
        if (fields) {
            const allNonPaymentFields = fields.map((block)=>{
                const { name, blockType, label } = block;
                if (blockType !== 'payment') {
                    return {
                        label,
                        value: name
                    };
                }
                return null;
            }).filter(Boolean);
            setOptions(allNonPaymentFields);
        }
    }, [
        fields,
        getDataByPath
    ]);
    return /*#__PURE__*/ _react.default.createElement(_forms.Select, {
        ...props,
        options: options
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb2xsZWN0aW9ucy9Gb3Jtcy9EeW5hbWljRmllbGRTZWxlY3Rvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCB0eXBlIHsgVGV4dEZpZWxkIH0gZnJvbSAncGF5bG9hZC9kaXN0L2ZpZWxkcy9jb25maWcvdHlwZXMnXG5cbmltcG9ydCB7IFNlbGVjdCwgdXNlRm9ybSB9IGZyb20gJ3BheWxvYWQvY29tcG9uZW50cy9mb3JtcydcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5cbmltcG9ydCB0eXBlIHsgU2VsZWN0RmllbGRPcHRpb24gfSBmcm9tICcuLi8uLi90eXBlcydcblxuZXhwb3J0IGNvbnN0IER5bmFtaWNGaWVsZFNlbGVjdG9yOiBSZWFjdC5GQzxUZXh0RmllbGQ+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgZmllbGRzLCBnZXREYXRhQnlQYXRoIH0gPSB1c2VGb3JtKClcblxuICBjb25zdCBbb3B0aW9ucywgc2V0T3B0aW9uc10gPSB1c2VTdGF0ZTxTZWxlY3RGaWVsZE9wdGlvbltdPihbXSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBjb25zdCBmaWVsZHM6IGFueVtdID0gZ2V0RGF0YUJ5UGF0aCgnZmllbGRzJylcblxuICAgIGlmIChmaWVsZHMpIHtcbiAgICAgIGNvbnN0IGFsbE5vblBheW1lbnRGaWVsZHMgPSBmaWVsZHNcbiAgICAgICAgLm1hcCgoYmxvY2spOiBTZWxlY3RGaWVsZE9wdGlvbiB8IG51bGwgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgbmFtZSwgYmxvY2tUeXBlLCBsYWJlbCB9ID0gYmxvY2tcblxuICAgICAgICAgIGlmIChibG9ja1R5cGUgIT09ICdwYXltZW50Jykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgbGFiZWwsXG4gICAgICAgICAgICAgIHZhbHVlOiBuYW1lLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH0pXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgIHNldE9wdGlvbnMoYWxsTm9uUGF5bWVudEZpZWxkcylcbiAgICB9XG4gIH0sIFtmaWVsZHMsIGdldERhdGFCeVBhdGhdKVxuXG4gIHJldHVybiA8U2VsZWN0IHsuLi5wcm9wc30gb3B0aW9ucz17b3B0aW9uc30gLz5cbn1cbiJdLCJuYW1lcyI6WyJEeW5hbWljRmllbGRTZWxlY3RvciIsInByb3BzIiwiZmllbGRzIiwiZ2V0RGF0YUJ5UGF0aCIsInVzZUZvcm0iLCJvcHRpb25zIiwic2V0T3B0aW9ucyIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiYWxsTm9uUGF5bWVudEZpZWxkcyIsIm1hcCIsImJsb2NrIiwibmFtZSIsImJsb2NrVHlwZSIsImxhYmVsIiwidmFsdWUiLCJmaWx0ZXIiLCJCb29sZWFuIiwiU2VsZWN0Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBU2FBOzs7ZUFBQUE7Ozt1QkFMbUI7K0RBQ1c7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJcEMsTUFBTUEsdUJBQTRDLENBQUNDO0lBQ3hELE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxhQUFhLEVBQUUsR0FBR0MsSUFBQUEsY0FBTztJQUV6QyxNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR0MsSUFBQUEsZUFBUSxFQUFzQixFQUFFO0lBRTlEQyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsYUFBYTtRQUNiLE1BQU1OLFNBQWdCQyxjQUFjO1FBRXBDLElBQUlELFFBQVE7WUFDVixNQUFNTyxzQkFBc0JQLE9BQ3pCUSxHQUFHLENBQUMsQ0FBQ0M7Z0JBQ0osTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFLEdBQUdIO2dCQUVuQyxJQUFJRSxjQUFjLFdBQVc7b0JBQzNCLE9BQU87d0JBQ0xDO3dCQUNBQyxPQUFPSDtvQkFDVDtnQkFDRjtnQkFFQSxPQUFPO1lBQ1QsR0FDQ0ksTUFBTSxDQUFDQztZQUNWWCxXQUFXRztRQUNiO0lBQ0YsR0FBRztRQUFDUDtRQUFRQztLQUFjO0lBRTFCLHFCQUFPLDZCQUFDZSxhQUFNO1FBQUUsR0FBR2pCLEtBQUs7UUFBRUksU0FBU0E7O0FBQ3JDIn0=