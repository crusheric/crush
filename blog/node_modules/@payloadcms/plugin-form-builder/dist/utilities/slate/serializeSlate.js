"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "serializeSlate", {
    enumerable: true,
    get: function() {
        return serializeSlate;
    }
});
const _escapehtml = /*#__PURE__*/ _interop_require_default(require("escape-html"));
const _replaceDoubleCurlys = require("../replaceDoubleCurlys");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const isTextNode = (node)=>{
    return 'text' in node;
};
const serializeSlate = (children, submissionData)=>children?.map((node)=>{
        if (isTextNode(node)) {
            let text = `<span>${(0, _escapehtml.default)((0, _replaceDoubleCurlys.replaceDoubleCurlys)(node.text, submissionData))}</span>`;
            if (node.bold) {
                text = `
        <strong>
          ${text}
        </strong>
      `;
            }
            if (node.code) {
                text = `
        <code>
          ${text}
        </code>
      `;
            }
            if (node.italic) {
                text = `
        <em >
          ${text}
        </em>
      `;
            }
            return text;
        }
        if (!node) {
            return null;
        }
        switch(node.type){
            case 'h1':
                return `
        <h1>
          ${serializeSlate(node.children, submissionData)}
        </h1>
      `;
            case 'h2':
                return `
        <h2>
          ${serializeSlate(node.children, submissionData)}
        </h2>
      `;
            case 'h3':
                return `
        <h3>
          ${serializeSlate(node.children, submissionData)}
        </h3>
      `;
            case 'h4':
                return `
        <h4>
          ${serializeSlate(node.children, submissionData)}
        </h4>
      `;
            case 'h5':
                return `
        <h5>
          ${serializeSlate(node.children, submissionData)}
        </h5>
      `;
            case 'h6':
                return `
        <h6>
          ${serializeSlate(node.children, submissionData)}
        </h6>
      `;
            case 'quote':
                return `
        <blockquote>
          ${serializeSlate(node.children, submissionData)}
        </blockquote>
      `;
            case 'ul':
                return `
        <ul>
          ${serializeSlate(node.children, submissionData)}
        </ul>
      `;
            case 'ol':
                return `
        <ol>
          ${serializeSlate(node.children, submissionData)}
        </ol>
      `;
            case 'li':
                return `
        <li>
          ${serializeSlate(node.children, submissionData)}
        </li>
      `;
            case 'indent':
                return `
          <p style="padding-left: 20px">
            ${serializeSlate(node.children, submissionData)}
          </p>
        `;
            case 'link':
                return `
          <a href={${(0, _escapehtml.default)((0, _replaceDoubleCurlys.replaceDoubleCurlys)(node.url, submissionData))}}>
          ${serializeSlate(node.children, submissionData)}
        </a>
      `;
            default:
                return `
        <p>
          ${serializeSlate(node.children, submissionData)}
        </p>
      `;
        }
    }).filter(Boolean).join('');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsaXRpZXMvc2xhdGUvc2VyaWFsaXplU2xhdGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVzY2FwZUhUTUwgZnJvbSAnZXNjYXBlLWh0bWwnXG5cbmltcG9ydCB7IHJlcGxhY2VEb3VibGVDdXJseXMgfSBmcm9tICcuLi9yZXBsYWNlRG91YmxlQ3VybHlzJ1xuXG5pbnRlcmZhY2UgTm9kZSB7XG4gIGJvbGQ/OiBib29sZWFuXG4gIGNoaWxkcmVuPzogTm9kZVtdXG4gIGNvZGU/OiBib29sZWFuXG4gIGl0YWxpYz86IGJvb2xlYW5cbiAgdGV4dD86IHN0cmluZ1xuICB0eXBlPzogc3RyaW5nXG4gIHVybD86IHN0cmluZ1xufVxuXG5jb25zdCBpc1RleHROb2RlID0gKG5vZGU6IE5vZGUpOiBub2RlIGlzIE5vZGUgJiB7IHRleHQ6IHN0cmluZyB9ID0+IHtcbiAgcmV0dXJuICd0ZXh0JyBpbiBub2RlXG59XG5cbmV4cG9ydCBjb25zdCBzZXJpYWxpemVTbGF0ZSA9IChjaGlsZHJlbj86IE5vZGVbXSwgc3VibWlzc2lvbkRhdGE/OiBhbnkpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT5cbiAgY2hpbGRyZW5cbiAgICA/Lm1hcCgobm9kZTogTm9kZSkgPT4ge1xuICAgICAgaWYgKGlzVGV4dE5vZGUobm9kZSkpIHtcbiAgICAgICAgbGV0IHRleHQgPSBgPHNwYW4+JHtlc2NhcGVIVE1MKHJlcGxhY2VEb3VibGVDdXJseXMobm9kZS50ZXh0LCBzdWJtaXNzaW9uRGF0YSkpfTwvc3Bhbj5gXG5cbiAgICAgICAgaWYgKG5vZGUuYm9sZCkge1xuICAgICAgICAgIHRleHQgPSBgXG4gICAgICAgIDxzdHJvbmc+XG4gICAgICAgICAgJHt0ZXh0fVxuICAgICAgICA8L3N0cm9uZz5cbiAgICAgIGBcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChub2RlLmNvZGUpIHtcbiAgICAgICAgICB0ZXh0ID0gYFxuICAgICAgICA8Y29kZT5cbiAgICAgICAgICAke3RleHR9XG4gICAgICAgIDwvY29kZT5cbiAgICAgIGBcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChub2RlLml0YWxpYykge1xuICAgICAgICAgIHRleHQgPSBgXG4gICAgICAgIDxlbSA+XG4gICAgICAgICAgJHt0ZXh0fVxuICAgICAgICA8L2VtPlxuICAgICAgYFxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgIH1cblxuICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgIHJldHVybiBudWxsXG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAobm9kZS50eXBlKSB7XG4gICAgICAgIGNhc2UgJ2gxJzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8aDE+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvaDE+XG4gICAgICBgXG4gICAgICAgIGNhc2UgJ2gyJzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8aDI+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvaDI+XG4gICAgICBgXG4gICAgICAgIGNhc2UgJ2gzJzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8aDM+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvaDM+XG4gICAgICBgXG4gICAgICAgIGNhc2UgJ2g0JzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8aDQ+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvaDQ+XG4gICAgICBgXG4gICAgICAgIGNhc2UgJ2g1JzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8aDU+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvaDU+XG4gICAgICBgXG4gICAgICAgIGNhc2UgJ2g2JzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8aDY+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvaDY+XG4gICAgICBgXG4gICAgICAgIGNhc2UgJ3F1b3RlJzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICA8YmxvY2txdW90ZT5cbiAgICAgICAgICAke3NlcmlhbGl6ZVNsYXRlKG5vZGUuY2hpbGRyZW4sIHN1Ym1pc3Npb25EYXRhKX1cbiAgICAgICAgPC9ibG9ja3F1b3RlPlxuICAgICAgYFxuICAgICAgICBjYXNlICd1bCc6XG4gICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgPHVsPlxuICAgICAgICAgICR7c2VyaWFsaXplU2xhdGUobm9kZS5jaGlsZHJlbiwgc3VibWlzc2lvbkRhdGEpfVxuICAgICAgICA8L3VsPlxuICAgICAgYFxuICAgICAgICBjYXNlICdvbCc6XG4gICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgPG9sPlxuICAgICAgICAgICR7c2VyaWFsaXplU2xhdGUobm9kZS5jaGlsZHJlbiwgc3VibWlzc2lvbkRhdGEpfVxuICAgICAgICA8L29sPlxuICAgICAgYFxuICAgICAgICBjYXNlICdsaSc6XG4gICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgPGxpPlxuICAgICAgICAgICR7c2VyaWFsaXplU2xhdGUobm9kZS5jaGlsZHJlbiwgc3VibWlzc2lvbkRhdGEpfVxuICAgICAgICA8L2xpPlxuICAgICAgYFxuICAgICAgICBjYXNlICdpbmRlbnQnOlxuICAgICAgICAgIHJldHVybiBgXG4gICAgICAgICAgPHAgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6IDIwcHhcIj5cbiAgICAgICAgICAgICR7c2VyaWFsaXplU2xhdGUobm9kZS5jaGlsZHJlbiwgc3VibWlzc2lvbkRhdGEpfVxuICAgICAgICAgIDwvcD5cbiAgICAgICAgYFxuICAgICAgICBjYXNlICdsaW5rJzpcbiAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgIDxhIGhyZWY9eyR7ZXNjYXBlSFRNTChyZXBsYWNlRG91YmxlQ3VybHlzKG5vZGUudXJsLCBzdWJtaXNzaW9uRGF0YSkpfX0+XG4gICAgICAgICAgJHtzZXJpYWxpemVTbGF0ZShub2RlLmNoaWxkcmVuLCBzdWJtaXNzaW9uRGF0YSl9XG4gICAgICAgIDwvYT5cbiAgICAgIGBcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiBgXG4gICAgICAgIDxwPlxuICAgICAgICAgICR7c2VyaWFsaXplU2xhdGUobm9kZS5jaGlsZHJlbiwgc3VibWlzc2lvbkRhdGEpfVxuICAgICAgICA8L3A+XG4gICAgICBgXG4gICAgICB9XG4gICAgfSlcbiAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgLmpvaW4oJycpXG4iXSwibmFtZXMiOlsic2VyaWFsaXplU2xhdGUiLCJpc1RleHROb2RlIiwibm9kZSIsImNoaWxkcmVuIiwic3VibWlzc2lvbkRhdGEiLCJtYXAiLCJ0ZXh0IiwiZXNjYXBlSFRNTCIsInJlcGxhY2VEb3VibGVDdXJseXMiLCJib2xkIiwiY29kZSIsIml0YWxpYyIsInR5cGUiLCJ1cmwiLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFrQmFBOzs7ZUFBQUE7OzttRUFsQlU7cUNBRWE7Ozs7OztBQVlwQyxNQUFNQyxhQUFhLENBQUNDO0lBQ2xCLE9BQU8sVUFBVUE7QUFDbkI7QUFFTyxNQUFNRixpQkFBaUIsQ0FBQ0csVUFBbUJDLGlCQUNoREQsVUFDSUUsSUFBSSxDQUFDSDtRQUNMLElBQUlELFdBQVdDLE9BQU87WUFDcEIsSUFBSUksT0FBTyxDQUFDLE1BQU0sRUFBRUMsSUFBQUEsbUJBQVUsRUFBQ0MsSUFBQUEsd0NBQW1CLEVBQUNOLEtBQUtJLElBQUksRUFBRUYsaUJBQWlCLE9BQU8sQ0FBQztZQUV2RixJQUFJRixLQUFLTyxJQUFJLEVBQUU7Z0JBQ2JILE9BQU8sQ0FBQzs7VUFFUixFQUFFQSxLQUFLOztNQUVYLENBQUM7WUFDQztZQUVBLElBQUlKLEtBQUtRLElBQUksRUFBRTtnQkFDYkosT0FBTyxDQUFDOztVQUVSLEVBQUVBLEtBQUs7O01BRVgsQ0FBQztZQUNDO1lBRUEsSUFBSUosS0FBS1MsTUFBTSxFQUFFO2dCQUNmTCxPQUFPLENBQUM7O1VBRVIsRUFBRUEsS0FBSzs7TUFFWCxDQUFDO1lBQ0M7WUFFQSxPQUFPQTtRQUNUO1FBRUEsSUFBSSxDQUFDSixNQUFNO1lBQ1QsT0FBTztRQUNUO1FBRUEsT0FBUUEsS0FBS1UsSUFBSTtZQUNmLEtBQUs7Z0JBQ0gsT0FBTyxDQUFDOztVQUVSLEVBQUVaLGVBQWVFLEtBQUtDLFFBQVEsRUFBRUMsZ0JBQWdCOztNQUVwRCxDQUFDO1lBQ0MsS0FBSztnQkFDSCxPQUFPLENBQUM7O1VBRVIsRUFBRUosZUFBZUUsS0FBS0MsUUFBUSxFQUFFQyxnQkFBZ0I7O01BRXBELENBQUM7WUFDQyxLQUFLO2dCQUNILE9BQU8sQ0FBQzs7VUFFUixFQUFFSixlQUFlRSxLQUFLQyxRQUFRLEVBQUVDLGdCQUFnQjs7TUFFcEQsQ0FBQztZQUNDLEtBQUs7Z0JBQ0gsT0FBTyxDQUFDOztVQUVSLEVBQUVKLGVBQWVFLEtBQUtDLFFBQVEsRUFBRUMsZ0JBQWdCOztNQUVwRCxDQUFDO1lBQ0MsS0FBSztnQkFDSCxPQUFPLENBQUM7O1VBRVIsRUFBRUosZUFBZUUsS0FBS0MsUUFBUSxFQUFFQyxnQkFBZ0I7O01BRXBELENBQUM7WUFDQyxLQUFLO2dCQUNILE9BQU8sQ0FBQzs7VUFFUixFQUFFSixlQUFlRSxLQUFLQyxRQUFRLEVBQUVDLGdCQUFnQjs7TUFFcEQsQ0FBQztZQUNDLEtBQUs7Z0JBQ0gsT0FBTyxDQUFDOztVQUVSLEVBQUVKLGVBQWVFLEtBQUtDLFFBQVEsRUFBRUMsZ0JBQWdCOztNQUVwRCxDQUFDO1lBQ0MsS0FBSztnQkFDSCxPQUFPLENBQUM7O1VBRVIsRUFBRUosZUFBZUUsS0FBS0MsUUFBUSxFQUFFQyxnQkFBZ0I7O01BRXBELENBQUM7WUFDQyxLQUFLO2dCQUNILE9BQU8sQ0FBQzs7VUFFUixFQUFFSixlQUFlRSxLQUFLQyxRQUFRLEVBQUVDLGdCQUFnQjs7TUFFcEQsQ0FBQztZQUNDLEtBQUs7Z0JBQ0gsT0FBTyxDQUFDOztVQUVSLEVBQUVKLGVBQWVFLEtBQUtDLFFBQVEsRUFBRUMsZ0JBQWdCOztNQUVwRCxDQUFDO1lBQ0MsS0FBSztnQkFDSCxPQUFPLENBQUM7O1lBRU4sRUFBRUosZUFBZUUsS0FBS0MsUUFBUSxFQUFFQyxnQkFBZ0I7O1FBRXBELENBQUM7WUFDRCxLQUFLO2dCQUNILE9BQU8sQ0FBQzttQkFDQyxFQUFFRyxJQUFBQSxtQkFBVSxFQUFDQyxJQUFBQSx3Q0FBbUIsRUFBQ04sS0FBS1csR0FBRyxFQUFFVCxpQkFBaUI7VUFDckUsRUFBRUosZUFBZUUsS0FBS0MsUUFBUSxFQUFFQyxnQkFBZ0I7O01BRXBELENBQUM7WUFFQztnQkFDRSxPQUFPLENBQUM7O1VBRVIsRUFBRUosZUFBZUUsS0FBS0MsUUFBUSxFQUFFQyxnQkFBZ0I7O01BRXBELENBQUM7UUFDRDtJQUNGLEdBQ0NVLE9BQU9DLFNBQ1BDLEtBQUsifQ==