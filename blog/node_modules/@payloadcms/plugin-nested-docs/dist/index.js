"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _breadcrumbs = /*#__PURE__*/ _interop_require_default(require("./fields/breadcrumbs"));
const _parent = /*#__PURE__*/ _interop_require_default(require("./fields/parent"));
const _parentFilterOptions = /*#__PURE__*/ _interop_require_default(require("./fields/parentFilterOptions"));
const _resaveChildren = /*#__PURE__*/ _interop_require_default(require("./hooks/resaveChildren"));
const _resaveSelfAfterCreate = /*#__PURE__*/ _interop_require_default(require("./hooks/resaveSelfAfterCreate"));
const _populateBreadcrumbs = /*#__PURE__*/ _interop_require_default(require("./utilities/populateBreadcrumbs"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const nestedDocs = (pluginConfig)=>(config)=>({
            ...config,
            collections: (config.collections || []).map((collection)=>{
                if (pluginConfig.collections.indexOf(collection.slug) > -1) {
                    const fields = [
                        ...collection?.fields || []
                    ];
                    const existingBreadcrumbField = collection.fields.find((field)=>'name' in field && field.name === (pluginConfig?.breadcrumbsFieldSlug || 'breadcrumbs'));
                    const existingParentField = collection.fields.find((field)=>'name' in field && field.name === (pluginConfig?.parentFieldSlug || 'parent'));
                    const defaultFilterOptions = (0, _parentFilterOptions.default)(pluginConfig?.breadcrumbsFieldSlug);
                    if (existingParentField) {
                        if (!existingParentField.filterOptions) {
                            existingParentField.filterOptions = defaultFilterOptions;
                        }
                    }
                    if (!existingParentField && !pluginConfig.parentFieldSlug) {
                        const defaultParentField = (0, _parent.default)(collection.slug);
                        defaultParentField.filterOptions = defaultFilterOptions;
                        fields.push(defaultParentField);
                    }
                    if (!existingBreadcrumbField && !pluginConfig.breadcrumbsFieldSlug) {
                        fields.push((0, _breadcrumbs.default)(collection.slug));
                    }
                    return {
                        ...collection,
                        fields,
                        hooks: {
                            ...collection.hooks || {},
                            afterChange: [
                                (0, _resaveChildren.default)(pluginConfig, collection),
                                (0, _resaveSelfAfterCreate.default)(pluginConfig, collection),
                                ...collection?.hooks?.afterChange || []
                            ],
                            beforeChange: [
                                async ({ data, originalDoc, req })=>(0, _populateBreadcrumbs.default)(req, pluginConfig, collection, data, originalDoc),
                                ...collection?.hooks?.beforeChange || []
                            ]
                        }
                    };
                }
                return collection;
            })
        });
const _default = nestedDocs;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBsdWdpbiB9IGZyb20gJ3BheWxvYWQvY29uZmlnJ1xuaW1wb3J0IHR5cGUgeyBTaW5nbGVSZWxhdGlvbnNoaXBGaWVsZCB9IGZyb20gJ3BheWxvYWQvZGlzdC9maWVsZHMvY29uZmlnL3R5cGVzJ1xuXG5pbXBvcnQgdHlwZSB7IFBsdWdpbkNvbmZpZyB9IGZyb20gJy4vdHlwZXMnXG5cbmltcG9ydCBjcmVhdGVCcmVhZGNydW1ic0ZpZWxkIGZyb20gJy4vZmllbGRzL2JyZWFkY3J1bWJzJ1xuaW1wb3J0IGNyZWF0ZVBhcmVudEZpZWxkIGZyb20gJy4vZmllbGRzL3BhcmVudCdcbmltcG9ydCBwYXJlbnRGaWx0ZXJPcHRpb25zIGZyb20gJy4vZmllbGRzL3BhcmVudEZpbHRlck9wdGlvbnMnXG5pbXBvcnQgcmVzYXZlQ2hpbGRyZW4gZnJvbSAnLi9ob29rcy9yZXNhdmVDaGlsZHJlbidcbmltcG9ydCByZXNhdmVTZWxmQWZ0ZXJDcmVhdGUgZnJvbSAnLi9ob29rcy9yZXNhdmVTZWxmQWZ0ZXJDcmVhdGUnXG5pbXBvcnQgcG9wdWxhdGVCcmVhZGNydW1icyBmcm9tICcuL3V0aWxpdGllcy9wb3B1bGF0ZUJyZWFkY3J1bWJzJ1xuXG5jb25zdCBuZXN0ZWREb2NzID1cbiAgKHBsdWdpbkNvbmZpZzogUGx1Z2luQ29uZmlnKTogUGx1Z2luID0+XG4gIChjb25maWcpID0+ICh7XG4gICAgLi4uY29uZmlnLFxuICAgIGNvbGxlY3Rpb25zOiAoY29uZmlnLmNvbGxlY3Rpb25zIHx8IFtdKS5tYXAoKGNvbGxlY3Rpb24pID0+IHtcbiAgICAgIGlmIChwbHVnaW5Db25maWcuY29sbGVjdGlvbnMuaW5kZXhPZihjb2xsZWN0aW9uLnNsdWcpID4gLTEpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gWy4uLihjb2xsZWN0aW9uPy5maWVsZHMgfHwgW10pXVxuXG4gICAgICAgIGNvbnN0IGV4aXN0aW5nQnJlYWRjcnVtYkZpZWxkID0gY29sbGVjdGlvbi5maWVsZHMuZmluZChcbiAgICAgICAgICAoZmllbGQpID0+XG4gICAgICAgICAgICAnbmFtZScgaW4gZmllbGQgJiYgZmllbGQubmFtZSA9PT0gKHBsdWdpbkNvbmZpZz8uYnJlYWRjcnVtYnNGaWVsZFNsdWcgfHwgJ2JyZWFkY3J1bWJzJyksXG4gICAgICAgIClcblxuICAgICAgICBjb25zdCBleGlzdGluZ1BhcmVudEZpZWxkID0gY29sbGVjdGlvbi5maWVsZHMuZmluZChcbiAgICAgICAgICAoZmllbGQpID0+ICduYW1lJyBpbiBmaWVsZCAmJiBmaWVsZC5uYW1lID09PSAocGx1Z2luQ29uZmlnPy5wYXJlbnRGaWVsZFNsdWcgfHwgJ3BhcmVudCcpLFxuICAgICAgICApIGFzIFNpbmdsZVJlbGF0aW9uc2hpcEZpZWxkXG5cbiAgICAgICAgY29uc3QgZGVmYXVsdEZpbHRlck9wdGlvbnMgPSBwYXJlbnRGaWx0ZXJPcHRpb25zKHBsdWdpbkNvbmZpZz8uYnJlYWRjcnVtYnNGaWVsZFNsdWcpXG5cbiAgICAgICAgaWYgKGV4aXN0aW5nUGFyZW50RmllbGQpIHtcbiAgICAgICAgICBpZiAoIWV4aXN0aW5nUGFyZW50RmllbGQuZmlsdGVyT3B0aW9ucykge1xuICAgICAgICAgICAgZXhpc3RpbmdQYXJlbnRGaWVsZC5maWx0ZXJPcHRpb25zID0gZGVmYXVsdEZpbHRlck9wdGlvbnNcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWV4aXN0aW5nUGFyZW50RmllbGQgJiYgIXBsdWdpbkNvbmZpZy5wYXJlbnRGaWVsZFNsdWcpIHtcbiAgICAgICAgICBjb25zdCBkZWZhdWx0UGFyZW50RmllbGQgPSBjcmVhdGVQYXJlbnRGaWVsZChjb2xsZWN0aW9uLnNsdWcpXG4gICAgICAgICAgZGVmYXVsdFBhcmVudEZpZWxkLmZpbHRlck9wdGlvbnMgPSBkZWZhdWx0RmlsdGVyT3B0aW9uc1xuICAgICAgICAgIGZpZWxkcy5wdXNoKGRlZmF1bHRQYXJlbnRGaWVsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghZXhpc3RpbmdCcmVhZGNydW1iRmllbGQgJiYgIXBsdWdpbkNvbmZpZy5icmVhZGNydW1ic0ZpZWxkU2x1Zykge1xuICAgICAgICAgIGZpZWxkcy5wdXNoKGNyZWF0ZUJyZWFkY3J1bWJzRmllbGQoY29sbGVjdGlvbi5zbHVnKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uY29sbGVjdGlvbixcbiAgICAgICAgICBmaWVsZHMsXG4gICAgICAgICAgaG9va3M6IHtcbiAgICAgICAgICAgIC4uLihjb2xsZWN0aW9uLmhvb2tzIHx8IHt9KSxcbiAgICAgICAgICAgIGFmdGVyQ2hhbmdlOiBbXG4gICAgICAgICAgICAgIHJlc2F2ZUNoaWxkcmVuKHBsdWdpbkNvbmZpZywgY29sbGVjdGlvbiksXG4gICAgICAgICAgICAgIHJlc2F2ZVNlbGZBZnRlckNyZWF0ZShwbHVnaW5Db25maWcsIGNvbGxlY3Rpb24pLFxuICAgICAgICAgICAgICAuLi4oY29sbGVjdGlvbj8uaG9va3M/LmFmdGVyQ2hhbmdlIHx8IFtdKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBiZWZvcmVDaGFuZ2U6IFtcbiAgICAgICAgICAgICAgYXN5bmMgKHsgZGF0YSwgb3JpZ2luYWxEb2MsIHJlcSB9KSA9PlxuICAgICAgICAgICAgICAgIHBvcHVsYXRlQnJlYWRjcnVtYnMocmVxLCBwbHVnaW5Db25maWcsIGNvbGxlY3Rpb24sIGRhdGEsIG9yaWdpbmFsRG9jKSxcbiAgICAgICAgICAgICAgLi4uKGNvbGxlY3Rpb24/Lmhvb2tzPy5iZWZvcmVDaGFuZ2UgfHwgW10pLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb2xsZWN0aW9uXG4gICAgfSksXG4gIH0pXG5cbmV4cG9ydCBkZWZhdWx0IG5lc3RlZERvY3NcbiJdLCJuYW1lcyI6WyJuZXN0ZWREb2NzIiwicGx1Z2luQ29uZmlnIiwiY29uZmlnIiwiY29sbGVjdGlvbnMiLCJtYXAiLCJjb2xsZWN0aW9uIiwiaW5kZXhPZiIsInNsdWciLCJmaWVsZHMiLCJleGlzdGluZ0JyZWFkY3J1bWJGaWVsZCIsImZpbmQiLCJmaWVsZCIsIm5hbWUiLCJicmVhZGNydW1ic0ZpZWxkU2x1ZyIsImV4aXN0aW5nUGFyZW50RmllbGQiLCJwYXJlbnRGaWVsZFNsdWciLCJkZWZhdWx0RmlsdGVyT3B0aW9ucyIsInBhcmVudEZpbHRlck9wdGlvbnMiLCJmaWx0ZXJPcHRpb25zIiwiZGVmYXVsdFBhcmVudEZpZWxkIiwiY3JlYXRlUGFyZW50RmllbGQiLCJwdXNoIiwiY3JlYXRlQnJlYWRjcnVtYnNGaWVsZCIsImhvb2tzIiwiYWZ0ZXJDaGFuZ2UiLCJyZXNhdmVDaGlsZHJlbiIsInJlc2F2ZVNlbGZBZnRlckNyZWF0ZSIsImJlZm9yZUNoYW5nZSIsImRhdGEiLCJvcmlnaW5hbERvYyIsInJlcSIsInBvcHVsYXRlQnJlYWRjcnVtYnMiXSwibWFwcGluZ3MiOiI7Ozs7K0JBc0VBOzs7ZUFBQTs7O29FQWpFbUM7K0RBQ0w7NEVBQ0U7dUVBQ0w7OEVBQ087NEVBQ0Y7Ozs7OztBQUVoQyxNQUFNQSxhQUNKLENBQUNDLGVBQ0QsQ0FBQ0MsU0FBWSxDQUFBO1lBQ1gsR0FBR0EsTUFBTTtZQUNUQyxhQUFhLEFBQUNELENBQUFBLE9BQU9DLFdBQVcsSUFBSSxFQUFFLEFBQUQsRUFBR0MsR0FBRyxDQUFDLENBQUNDO2dCQUMzQyxJQUFJSixhQUFhRSxXQUFXLENBQUNHLE9BQU8sQ0FBQ0QsV0FBV0UsSUFBSSxJQUFJLENBQUMsR0FBRztvQkFDMUQsTUFBTUMsU0FBUzsyQkFBS0gsWUFBWUcsVUFBVSxFQUFFO3FCQUFFO29CQUU5QyxNQUFNQywwQkFBMEJKLFdBQVdHLE1BQU0sQ0FBQ0UsSUFBSSxDQUNwRCxDQUFDQyxRQUNDLFVBQVVBLFNBQVNBLE1BQU1DLElBQUksS0FBTVgsQ0FBQUEsY0FBY1ksd0JBQXdCLGFBQVk7b0JBR3pGLE1BQU1DLHNCQUFzQlQsV0FBV0csTUFBTSxDQUFDRSxJQUFJLENBQ2hELENBQUNDLFFBQVUsVUFBVUEsU0FBU0EsTUFBTUMsSUFBSSxLQUFNWCxDQUFBQSxjQUFjYyxtQkFBbUIsUUFBTztvQkFHeEYsTUFBTUMsdUJBQXVCQyxJQUFBQSw0QkFBbUIsRUFBQ2hCLGNBQWNZO29CQUUvRCxJQUFJQyxxQkFBcUI7d0JBQ3ZCLElBQUksQ0FBQ0Esb0JBQW9CSSxhQUFhLEVBQUU7NEJBQ3RDSixvQkFBb0JJLGFBQWEsR0FBR0Y7d0JBQ3RDO29CQUNGO29CQUVBLElBQUksQ0FBQ0YsdUJBQXVCLENBQUNiLGFBQWFjLGVBQWUsRUFBRTt3QkFDekQsTUFBTUkscUJBQXFCQyxJQUFBQSxlQUFpQixFQUFDZixXQUFXRSxJQUFJO3dCQUM1RFksbUJBQW1CRCxhQUFhLEdBQUdGO3dCQUNuQ1IsT0FBT2EsSUFBSSxDQUFDRjtvQkFDZDtvQkFFQSxJQUFJLENBQUNWLDJCQUEyQixDQUFDUixhQUFhWSxvQkFBb0IsRUFBRTt3QkFDbEVMLE9BQU9hLElBQUksQ0FBQ0MsSUFBQUEsb0JBQXNCLEVBQUNqQixXQUFXRSxJQUFJO29CQUNwRDtvQkFFQSxPQUFPO3dCQUNMLEdBQUdGLFVBQVU7d0JBQ2JHO3dCQUNBZSxPQUFPOzRCQUNMLEdBQUlsQixXQUFXa0IsS0FBSyxJQUFJLENBQUMsQ0FBQzs0QkFDMUJDLGFBQWE7Z0NBQ1hDLElBQUFBLHVCQUFjLEVBQUN4QixjQUFjSTtnQ0FDN0JxQixJQUFBQSw4QkFBcUIsRUFBQ3pCLGNBQWNJO21DQUNoQ0EsWUFBWWtCLE9BQU9DLGVBQWUsRUFBRTs2QkFDekM7NEJBQ0RHLGNBQWM7Z0NBQ1osT0FBTyxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsR0FBRyxFQUFFLEdBQy9CQyxJQUFBQSw0QkFBbUIsRUFBQ0QsS0FBSzdCLGNBQWNJLFlBQVl1QixNQUFNQzttQ0FDdkR4QixZQUFZa0IsT0FBT0ksZ0JBQWdCLEVBQUU7NkJBQzFDO3dCQUNIO29CQUNGO2dCQUNGO2dCQUVBLE9BQU90QjtZQUNUO1FBQ0YsQ0FBQTtNQUVGLFdBQWVMIn0=